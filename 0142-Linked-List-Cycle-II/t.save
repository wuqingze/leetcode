### 142. Linked List Cycle II
**Medium** **favorable:** 3934 **unfavorable:** 295

Given a linked list, return the node where the cycle begins. If there is no cycle, return null.

There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter.

Notice that you should not modify the linked list.

#### Example 1:
![](imgs/example1.svg)
```
Input: head = [3,2,0,-4], pos = 1
Output: tail connects to node index 1
Explanation: There is a cycle in the linked list, where tail connects to the second node.
```

#### Example 2:
![](imgs/example2.svg)
```
Input: head = [1,2], pos = 0
Output: tail connects to node index 0
Explanation: There is a cycle in the linked list, where tail connects to the first node.
```

#### Example 3:
![](imgs/example3.svg)
```
Input: head = [1], pos = -1
Output: no cycle
Explanation: There is no cycle in the linked list.
``` 

#### Constraints:
- The number of the nodes in the list is in the range [0, 104].
- -105 <= Node.val <= 105
- pos is -1 or a valid index in the linked-list.

**Follow up:** Can you solve it using O(1) (i.e. constant) memory?

#### Solution

判断一条单向链表中是否存在环，如果存在，则找出环的入点E。

可以用快慢指针的方法判断链表存在不存在环。快慢2个指针A和B处于链表的起点，同时出发，且B指针的速度是指针A的2倍，那么如果链表中存在环，2个指针将会在环中的某处相遇，如果链表中不存在环，那么2个指针依次走完链表且不会相遇。

证明：
- 不存在环，2个指针不会相遇且会依次走完链表。因为指针A和B同时从链表起点出发，且B的速度是A的2倍，那么很明显，A将永远追赶不上B知道遍历完链表。
- 存在环。
    - 快指针B比慢指针A率先进入环中，那么指针A位于环的入点E时，此时B相距指针A的前进方向距离为d(前进方向指的是链表中当前指针向下一指针的前进距离）。
    - 如果d为0，那么A和B相遇
    - 如果d为1，那么A和B将在1个时间单位后相遇。可以这样理解，A处于B前方的1个单位距离，以B当前位置为起点，那么一个单位时间，A距离距离起点位置为2个单位距离，B指针同样在一个单位时间后距离起点距离2个单位距离，因为B的前进速度是A的2倍。
    - 如果d为2，那么A和B将在1个单位时间后相距1个单位距离，那么，我们可以回到d为1的情况进行讨论，最终A和B相遇。
    - 如果d为3，那么A和B将在1个单位时间后相距2个单位距离，那么，我们可以回到d为2的情况进行讨论，最终A和B相遇
    - ....
    - 如果d为n，那么一个时间单位后我们可以回到d为n-1的情况进行讨论
    - 综上，通过归纳总结，如果慢指针A进入环时，A,B将在d个时间单位后相遇

通过上面的证明，我们知道如果链中存在环，那么A和B一定会在环中的某处相遇。接下来的程序是找出环的入点。

在A和B相遇后，指针C从链表起点以1倍速度出发，指针A在环中继续向前，最终A和C相遇的位置就是环的入点E。

证明：
- 设链中非环的长度l1，环的长度l2
- if l1==l2, 那么A,B在环的入点E相遇，此时C从链的起点出发走l1距离, d
